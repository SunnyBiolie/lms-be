// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id              String    @id @default(uuid())
  fullName        String
  address         String
  phoneNumber     String
  email           String
  birthDate       DateTime

  userName        String    @unique
  passWord        String
  role            String

  // Borrowing       Borrowing[]
  Transactions    Transaction[]
}

model Book {
  id                String      @id @default(uuid())
  title             String
  author            String
  publisher         String
  publicationDate   DateTime
  pages             Int?
  imageLink         String?
  quantity          Int

  createdAt         DateTime    @default(now())

  Categories        Category[]
  Transactions      Transaction[]
}

model Category {
  id        Int     @id @default(autoincrement())
  name      String  @unique

  Books     Book[]
}

model Transaction {
  id              String        @id @default(uuid())
  accountId       String
  bookId          String
  borrowedAt      DateTime      @default(now())
  dueDate         DateTime?
  returnedAt      DateTime?
  receivedFrom    String?
  passedFor       String?

  Account         Account       @relation(fields: [accountId], references: [id])
  Book            Book          @relation(fields: [bookId], references: [id])
  Renewals        Renewal[]
}

model Renewal {
  id                String      @id @default(uuid())
  transactionId     String
  renewedAt         DateTime    @default(now())
  dueDate           DateTime

  Transaction       Transaction @relation(fields: [transactionId], references: [id])
}

model History {
  id                String      @id @default(uuid())
  transactionId     String
  userName          String
  bookTitle         String
  categoriesName    String[]
  author            String
  borrowedAt        DateTime
  renewedAt         DateTime[]
  dueDates          DateTime[]
  returnedAt        DateTime
  receivedFrom      String
  passedFor         String?

  accountId         String
  bookId            String
  categoriesId      String[]
}
